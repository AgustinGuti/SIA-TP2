algorithm_config:
  population_size: 500
  # Options are "warrior","archer","defender","assasin"
  class_name: "warrior"
  population_to_keep: 0.75
  hard_cap_iterations: 10000

crossover_config:
  # Options are "uniform", "one_point", "two_point" or "annular"
  type: "uniform"

mutation_config:
  # Mutation rate for each individual or gene
  rate: 0.3
  # Options are "gen" or "multi_gen"
  type: "multi_gen"
  # Delta for the mutation
  delta: 30

selection_config:
  # Options are "elite", "roulette", "universal", "boltzmann", "ranking", "probabilistic_tournament", "deterministic_tournament"
  type_1: "elite"
  type_2: "ranking"
  ratio_A: 0.4
  # Boltzmann temperature
  initial_temperature: 30
  # Boltzmann temperature decay
  temperature_decay: 0.6
  # Boltzmann temperature minimum
  min_temperature: 5
  # Tournament quantity selection
  tournament_size: 50
  # threshold for the probabilistic tournament selection [0.5, 1]
  tournament_threshold: 0.75

replacement_config:
  # Options are "generational", "traditional" or "young_bias"
  type_1: "traditional"
  type_2: "young_bias"
  ratio_B: 0.3
  # Generational gap for the replacement
  gen_gap: 0.5

end_condition_config:
  # Options are "generations", "structure", "content" or "optimum"
  type: "content"
  # Number of generations
  generations: 500
  # Number of generations without improvement (content or structure)
  generations_to_check: 20
  # Acceptable percentage of deviation to consider gens equals
  structure_tolerance: 0.01
  # Proportion of the population that must be relevant between two generations
  structure_relevant_proportion: 0.98
  # Optimum value
  optimum: 61.5
  # Tolerance for optimum
  tolerance: 0.1
